# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞–º
async def send_cards_to_players(players_list, context: CallbackContext):
    for player in players_list:
        hand_emoji = " ".join([suit_to_emoji[card['suit']] + rank_to_emoji[card['rank']] for card in player['hand']])
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–Ω—é —Å –∫–∞—Ä—Ç–∞–º–∏
        cards_menu = generate_cards_menu(player['hand'])
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        actions_menu = generate_actions_menu(player['status'])
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–≤–∞ –º–µ–Ω—é –≤ –æ–¥–Ω–æ
        combined_menu = cards_menu.inline_keyboard + actions_menu.inline_keyboard
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–º –º–µ–Ω—é
        await context.bot.send_message(chat_id=player['id'], text=f"–¢–≤–æ–∏ –∫–∞—Ä—Ç—ã: {hand_emoji}", reply_markup=InlineKeyboardMarkup(combined_menu))



#–ú–µ–Ω—é –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞
def generate_cards_menu(player_hand):
    keyboard = []
    row = []
    for card in player_hand:
        card_emoji = suit_to_emoji[card['suit']] + rank_to_emoji[card['rank']]
        button = InlineKeyboardButton(card_emoji, callback_data=f"card_{card['suit']}-{card['rank']}")
        row.append(button)
        if len(row) == 4:  # –ü–æ—Å–ª–µ –∫–∞–∂–¥—ã—Ö 6 –∫–∞—Ä—Ç –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä—è–¥
            keyboard.append(row)
            row = []
    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–∞—Ä—Ç—ã, –µ—Å–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ 6
        keyboard.append(row)
    return InlineKeyboardMarkup(keyboard)



#–ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —É –∏–≥—Ä–æ–∫–∞
def generate_actions_menu(player_status):
    if player_status == "Attacking":
        buttons = [
            InlineKeyboardButton("–ê—Ç–∞–∫–æ–≤–∞—Ç—å", callback_data="action_attack")
        ]
    elif player_status == "Defending":
        buttons = [
            InlineKeyboardButton("–û—Ç–±–∏—Ç—å—Å—è", callback_data="action_defend"),
            InlineKeyboardButton("–í–∑—è—Ç—å", callback_data="action_take"),
            InlineKeyboardButton("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏", callback_data="action_transfer")
        ]
    else:  # Idle
        buttons = [
            InlineKeyboardButton("–ü–æ–¥–∫–∏–Ω—É—Ç—å", callback_data="action_throw_in")
        ]
    
    keyboard = [buttons]  # –¢–µ–ø–µ—Ä—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
    return InlineKeyboardMarkup(keyboard)




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Å—Ç–æ–ª–∞
def generate_game_table(chat_id, deck, trump_suit, table_cards):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—è–¥–æ–∫ —Ö–æ–¥–∞
    current_order = players[chat_id]
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ –∏ –∫–æ–∑—ã—Ä–µ
    cards_left = len(deck)
    trump_card = suit_to_emoji[trump_suit] + rank_to_emoji[deck[-1]['rank']]
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Ä—è–¥–∫–µ —Ö–æ–¥–∞
    order_info = "\n".join([f"{player['name']} - üÉè{len(player['hand'])}" for player in current_order])
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ö–æ–¥–µ
    current_player = current_order[0]['name']
    next_player = current_order[1]['name']
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–º–µ—Å—Ç–µ
    table = f"üÉè{cards_left} | –ö–æ–∑—ã—Ä—å: {trump_card} | –•–æ–¥: {current_player} ‚û°Ô∏è {next_player}\n\n"
    table += "–ü–æ—Ä—è–¥–æ–∫ —Ö–æ–¥–∞:\n"
    table += order_info
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∞—Ö –Ω–∞ —Å—Ç–æ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    # (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫–∏ —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ö–æ–¥–∏—Ç—å)
    table += "\n\n–ù–∞ —Å—Ç–æ–ª–µ:\n"
    table += " ".join([f"{suit_to_emoji[card['suit']]}{rank_to_emoji[card['rank']]}" for card in table_cards])
    
    return table

#–í—ã–≤–æ–¥–∏–º –∏–≥—Ä–æ–≤–æ–π —Å—Ç–æ–ª
async def update_game_table_message(update: Update, context: CallbackContext, chat_id, deck, trump_suit, table_cards):

    print("Debug: Inside update_game_table_message")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
    print(f"Debug: Table cards inside update_game_table_message: {table_cards}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
    
    #–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∏–≥—Ä–µ
    context.user_data['table_cards'] = table_cards
    context.user_data['deck'] = deck
    context.user_data['trump_suit'] = trump_suit
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–π —Å—Ç–æ–ª
    table_message = generate_game_table(chat_id, deck, trump_suit, table_cards)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º —Å—Ç–æ–ª–æ–º
    # –ó–¥–µ—Å—å –º—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–≥—Ä–æ–≤—ã–º —Å—Ç–æ–ª–æ–º.
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–∞–∫, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–µ.
    if 'table_message_id' in context.user_data:
        print(f"Debug: Updating table message with ID: {context.user_data['table_message_id']}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
        await context.bot.edit_message_text(chat_id=chat_id, message_id=context.user_data['table_message_id'], text=table_message)
    else:
        print("Debug: Sending new table message")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
        sent_message = await update.message.reply_text(table_message)
        context.user_data['table_message_id'] = sent_message.message_id



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Ö–æ–¥–∞
def update_turn_order(players_order):
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
    current_player = players_order.pop(0)
    players_order.append(current_player)
    return players_order

#–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ
async def join_game(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    chat_id = update.message.chat_id

    if chat_id not in players:
        players[chat_id] = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ
    for player in players[chat_id]:
        if player['id'] == user.id:
            await update.message.reply_text(f"{user.first_name}, —Ç—ã —É–∂–µ –≤ –∏–≥—Ä–µ!")
            return

    players[chat_id].append({
        'id': user.id,
        'name': user.first_name,
        'message': update.message,  # –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
        'status': 'Idle'  # –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å

    })

    await update.message.reply_text(f"{user.first_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!")