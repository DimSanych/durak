from telegram.ext import Application, CommandHandler, MessageHandler, filters
from telegram import Update
from telegram.ext import CallbackContext
import random
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackQueryHandler
import logging
logging.basicConfig(level=logging.ERROR)  # –ì–ª–æ–±–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–µ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
import asyncio




#–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º
async def start(update, context):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –î—É—Ä–∞–∫–∞. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å.")

async def help_command(update, context):
    await update.message.reply_text("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏ /play. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∞–≤–∏–ª –Ω–∞–ø–∏—à–∏ /rules.")

async def play(update, context):
    await join_game(update, context)

    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    pass

async def rules(update, context):
    rules_text = """
    –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ –î—É—Ä–∞–∫–∞:
    ...
    """
    await update.message.reply_text(rules_text)

# –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –∏–≥—Ä–∞—Ç—å
players = {}

#–ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
suits = ["spades", "clubs", "diamonds", "hearts"]
ranks_36 = ["6", "7", "8", "9", "10", "jack", "queen", "king", "ace"]
ranks_52 = ["2", "3", "4", "5"] + ranks_36

suit_to_emoji = {
    "diamonds": "‚ô¶Ô∏è",
    "spades": "‚ô†Ô∏è",
    "hearts": "‚ô•Ô∏è",
    "clubs": "‚ô£Ô∏è"
}

rank_to_emoji = {
    "ace": "üÖ∞Ô∏è",
    "2": "2Ô∏è‚É£",
    "3": "3Ô∏è‚É£",
    "4": "4Ô∏è‚É£",
    "5": "5Ô∏è‚É£",
    "6": "6Ô∏è‚É£",
    "7": "7Ô∏è‚É£",
    "8": "8Ô∏è‚É£",
    "9": "9Ô∏è‚É£",
    "10": "üîü",
    "jack": "üëÆüèª",
    "queen": "üë∏üèª",
    "king": "ü§¥üèª"
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é —Ä–∞–Ω–≥–æ–≤ –¥–ª—è 52-–∫–∞—Ä—Ç–æ—á–Ω–æ–π –∫–æ–ª–æ–¥—ã
rank_hierarchy = {
    "2": 1,
    "3": 2,
    "4": 3,
    "5": 4,
    "6": 5,
    "7": 6,
    "8": 7,
    "9": 8,
    "10": 9,
    "jack": 10,
    "queen": 11,
    "king": 12,
    "ace": 13
}


#–∏–≥—Ä–æ–≤–∞—è –∫–æ–ª–æ–¥–∞
def create_deck(deck_type="36", number_of_decks=1):
    if deck_type == "36":
        base_deck = [{"suit": suit, "rank": rank} for suit in suits for rank in ranks_36]
    elif deck_type == "52":
        base_deck = [{"suit": suit, "rank": rank} for suit in suits for rank in ranks_52]
    else:
        raise ValueError("Invalid deck type. Choose either '36' or '52'.")
    
    return base_deck * number_of_decks

# –ü–µ—Ä–µ—Ç–∞—Å–æ–≤–∫–∞ –∫–æ–ª–æ–¥—ã
def shuffle_deck(deck):
    random.shuffle(deck)
    return deck

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–∑—ã—Ä—è
def determine_trump(deck):
    trump_card = deck[-1]
    return trump_card['suit']

# –†–∞–∑–¥–∞—á–∞ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞–º
def deal_cards(players, deck):
    for player in players:
        player['hand'] = []

        # –†–∞–∑–¥–∞–µ–º –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –ø–æ 6 –∫–∞—Ä—Ç
        for _ in range(6):
            card = deck.pop()
            player['hand'].append(card)

    return players, deck

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º –∫–æ–∑—ã—Ä–µ–º
def determine_first_player(players_list, trump_suit):
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –Ω–∞–∏–º–µ–Ω—å—à–µ–º—É –∫–æ–∑—ã—Ä—é –≤ –∏—Ö —Ä—É–∫–µ
    players_list.sort(key=lambda player: min([rank_to_emoji[card['rank']] for card in player['hand'] if card['suit'] == trump_suit], default="ü§¥üèª"))
    return players_list